28SW-0334-1101.0	BUG17572-20240913 The practitioner is not saved if update from clinical tab patient inside view

Fixed Solution

[AbpAuthorize(PatientManagementPermissions.PatientClinic.PatientClinical.Edit)]
public override async Task<PatientClinicalDTO> UpdateAsync(Guid id, CreateUpdatePatientClinicalDTO input)
{
    try
    {
        await _permissionChecker.PermissionCheck(PatientManagementPermissions.PatientClinic.PatientClinical.Edit);
        PatientClinicalDTO vClinicalDetails = new PatientClinicalDTO();
        var vData1 = await _clinicalRepository.AnyAsync(i => i.Id == id);
        if (vData1)
        {
           

                // If referringProviderFacilityId set to not  null
                if (input.referringProviderFacilityId != null)
                {
                    var existingPracticeManagement = await _practiceManagementRepository.FirstOrDefaultAsync(i => i.Id == input.referringProviderFacilityId);
                    if (existingPracticeManagement != null)
                    {
                        input.referringProviderFacility = existingPracticeManagement.practiceName;
                    }
                    else if (input.referringProviderFacilityId == Guid.Empty)
                    {
                        // If no referringProviderFacilityId is provided, set the referringProviderFacility to null 
                        input.referringProviderFacility = null;
                    }
                    else
                    {
                        throw new UserFriendlyException("Practice Not Found");
                    }
            }
            
        }
        else
        {
            throw new UserFriendlyException("No Patient Exist with the given ID");
        }


        #region PatientDataMonitor
        try
        {
            PatientDataMonitor patientDataDetails = (await _patientDataMonitorRepository.GetListAsync(a => a.patientId == input.patientId)).FirstOrDefault();
            if (patientDataDetails != null)
            {
                patientDataDetails.patientId = input.patientId;
                patientDataDetails.description = "CLINICAL";
                patientDataDetails.modifiedDate = DateTime.Now;
                patientDataDetails.TenantId = CurrentTenant.Id;
                var vPatient = await _patientDataMonitorRepository.UpdateAsync(patientDataDetails);
            }
        }
        catch (Exception ex)
        {
            throw new UserFriendlyException(ex.Message);
        }


        #endregion

        vClinicalDetails = await base.UpdateAsync(id, input);
        _scopedCacheService.RemoveScoped($"patientList_{CurrentTenant.Id}");
        return vClinicalDetails;


    }
    catch (Exception ex)
    {
        throw new UserFriendlyException(ex.Message);
    }
}
